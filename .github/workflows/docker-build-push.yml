name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    paths:
      - 'ui/**'
      - 'api/**'

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ~/.cache/docker
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Set up Docker Hub credentials
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push UI image
        if: steps.changed-files.outputs.ui_changed == 'true'
        run: |
          docker build -t mvtthew/buy-buddy-ui:latest ./ui
          docker push mvtthew/buy-buddy-ui:latest

      - name: Build and push API image
        if: steps.changed-files.outputs.api_changed == 'true'
        run: |
          docker build -t mvtthew/buy-buddy-api:latest ./api
          docker push mvtthew/buy-buddy-api:latest

  check-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Check for changes in ui and api directories
        id: changed-files
        run: |
          git fetch origin main
          ui_changed=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^ui/' || true)
          api_changed=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^api/' || true)
          echo "::set-output name=ui_changed::$(if [[ -n "$ui_changed" ]]; then echo 'true'; else echo 'false'; fi)"
          echo "::set-output name=api_changed::$(if [[ -n "$api_changed" ]]; then echo 'true'; else echo 'false'; fi)"
